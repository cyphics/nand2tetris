<keyword>class</keyword>
<identifier>SquareGame</identifier>
<symbol>{</symbol>
<classVarDec>
<keyword>field</keyword>
<identifier>Square</identifier>
<identifier>square</identifier>
<symbol>;</symbol>
</classVarDec>
<classVarDec>
<keyword>field</keyword>
<keyword>int</keyword>
<identifier>direction</identifier>
<symbol>;</symbol>
</classVarDec>
<keyword>constructor</keyword>
<identifier>SquareGame</identifier>
<identifier>new</identifier>
<symbol>(</symbol>
<parameterList>
</parameterList>
<symbol>)</symbol>
<symbol>{</symbol>
<statements>
<keyword>let</keyword>
<identifier>square</identifier>
<symbol>=</symbol>
<identifier>Square</identifier>
<symbol>.</symbol>
<identifier>new</identifier>
<symbol>(</symbol>
<integerConstant>0</integerConstant>
<symbol>,</symbol>
<integerConstant>0</integerConstant>
<symbol>,</symbol>
<integerConstant>30</integerConstant>
<symbol>)</symbol>
<symbol>;</symbol>
<keyword>let</keyword>
<identifier>direction</identifier>
<symbol>=</symbol>
<integerConstant>0</integerConstant>
<symbol>;</symbol>
<returnStatement>
<keyword>return</keyword>
<symbol>;</symbol>
</returnStatement>
</statements>
<symbol>}</symbol>
<keyword>method</keyword>
<keyword>void</keyword>
<identifier>dispose</identifier>
<symbol>(</symbol>
<parameterList>
</parameterList>
<symbol>)</symbol>
<symbol>{</symbol>
<statements>
<doStatement>
<keyword>do</keyword>
<identifier>square</identifier>
<symbol>.</symbol>
<identifier>dispose</identifier>
<symbol>(</symbol>
<symbol>)</symbol>
<symbol>;</symbol>
</doStatement>
<doStatement>
<keyword>do</keyword>
<identifier>Memory</identifier>
<symbol>.</symbol>
<identifier>deAlloc</identifier>
<symbol>(</symbol>
<symbol>)</symbol>
<symbol>;</symbol>
</doStatement>
<returnStatement>
<keyword>return</keyword>
<symbol>;</symbol>
</returnStatement>
</statements>
<symbol>}</symbol>
<keyword>method</keyword>
<keyword>void</keyword>
<identifier>moveSquare</identifier>
<symbol>(</symbol>
<parameterList>
</parameterList>
<symbol>)</symbol>
<symbol>{</symbol>
<statements>
<keyword>if</keyword>
<symbol>(</symbol>
<identifier>direction</identifier>
<integerConstant>1</integerConstant>
<symbol>)</symbol>
<symbol>{</symbol>
<statements>
<doStatement>
<keyword>do</keyword>
<identifier>square</identifier>
<symbol>.</symbol>
<identifier>moveUp</identifier>
<symbol>(</symbol>
<symbol>)</symbol>
<symbol>;</symbol>
</doStatement>
</statements>
<symbol>}</symbol>
<keyword>if</keyword>
<symbol>(</symbol>
<identifier>direction</identifier>
<integerConstant>2</integerConstant>
<symbol>)</symbol>
<symbol>{</symbol>
<statements>
<doStatement>
<keyword>do</keyword>
<identifier>square</identifier>
<symbol>.</symbol>
<identifier>moveDown</identifier>
<symbol>(</symbol>
<symbol>)</symbol>
<symbol>;</symbol>
</doStatement>
</statements>
<symbol>}</symbol>
<keyword>if</keyword>
<symbol>(</symbol>
<identifier>direction</identifier>
<integerConstant>3</integerConstant>
<symbol>)</symbol>
<symbol>{</symbol>
<statements>
<doStatement>
<keyword>do</keyword>
<identifier>square</identifier>
<symbol>.</symbol>
<identifier>moveLeft</identifier>
<symbol>(</symbol>
<symbol>)</symbol>
<symbol>;</symbol>
</doStatement>
</statements>
<symbol>}</symbol>
<keyword>if</keyword>
<symbol>(</symbol>
<identifier>direction</identifier>
<integerConstant>4</integerConstant>
<symbol>)</symbol>
<symbol>{</symbol>
<statements>
<doStatement>
<keyword>do</keyword>
<identifier>square</identifier>
<symbol>.</symbol>
<identifier>moveRight</identifier>
<symbol>(</symbol>
<symbol>)</symbol>
<symbol>;</symbol>
</doStatement>
</statements>
<symbol>}</symbol>
<doStatement>
<keyword>do</keyword>
<identifier>Sys</identifier>
<symbol>.</symbol>
<identifier>wait</identifier>
<symbol>(</symbol>
<integerConstant>5</integerConstant>
<symbol>)</symbol>
<symbol>;</symbol>
</doStatement>
<returnStatement>
<keyword>return</keyword>
<symbol>;</symbol>
</returnStatement>
</statements>
<symbol>}</symbol>
<keyword>method</keyword>
<keyword>void</keyword>
<identifier>run</identifier>
<symbol>(</symbol>
<parameterList>
</parameterList>
<symbol>)</symbol>
<symbol>{</symbol>
<varDec>
<keyword>var</keyword>
<keyword>char</keyword>
<identifier>key</identifier>
<symbol>;</symbol>
</varDec>
<varDec>
<keyword>var</keyword>
<keyword>boolean</keyword>
<identifier>exit</identifier>
<symbol>;</symbol>
</varDec>
<statements>
<keyword>let</keyword>
<identifier>exit</identifier>
<symbol>=</symbol>
<symbol>;</symbol>
<whileStatement>
<keyword>while</keyword>
<symbol>(</symbol>
<symbol>~</symbol>
<identifier>exit</identifier>
<symbol>)</symbol>
<symbol>{</symbol>
<statements>
<whileStatement>
<keyword>while</keyword>
<symbol>(</symbol>
<identifier>key</identifier>
<integerConstant>0</integerConstant>
<symbol>)</symbol>
<symbol>{</symbol>
<statements>
<keyword>let</keyword>
<identifier>key</identifier>
<symbol>=</symbol>
<identifier>Keyboard</identifier>
<symbol>.</symbol>
<identifier>keyPressed</identifier>
<symbol>(</symbol>
<symbol>)</symbol>
<symbol>;</symbol>
<doStatement>
<keyword>do</keyword>
<identifier>moveSquare</identifier>
<symbol>(</symbol>
<symbol>)</symbol>
<symbol>;</symbol>
</doStatement>
</statements>
<symbol>}</symbol>
</whileStatement>
<keyword>if</keyword>
<symbol>(</symbol>
<identifier>key</identifier>
<integerConstant>81</integerConstant>
<symbol>)</symbol>
<symbol>{</symbol>
<statements>
<keyword>let</keyword>
<identifier>exit</identifier>
<symbol>=</symbol>
<symbol>;</symbol>
</statements>
<symbol>}</symbol>
<keyword>if</keyword>
<symbol>(</symbol>
<identifier>key</identifier>
<integerConstant>90</integerConstant>
<symbol>)</symbol>
<symbol>{</symbol>
<statements>
<doStatement>
<keyword>do</keyword>
<identifier>square</identifier>
<symbol>.</symbol>
<identifier>decSize</identifier>
<symbol>(</symbol>
<symbol>)</symbol>
<symbol>;</symbol>
</doStatement>
</statements>
<symbol>}</symbol>
<keyword>if</keyword>
<symbol>(</symbol>
<identifier>key</identifier>
<integerConstant>88</integerConstant>
<symbol>)</symbol>
<symbol>{</symbol>
<statements>
<doStatement>
<keyword>do</keyword>
<identifier>square</identifier>
<symbol>.</symbol>
<identifier>incSize</identifier>
<symbol>(</symbol>
<symbol>)</symbol>
<symbol>;</symbol>
</doStatement>
</statements>
<symbol>}</symbol>
<keyword>if</keyword>
<symbol>(</symbol>
<identifier>key</identifier>
<integerConstant>131</integerConstant>
<symbol>)</symbol>
<symbol>{</symbol>
<statements>
<keyword>let</keyword>
<identifier>direction</identifier>
<symbol>=</symbol>
<integerConstant>1</integerConstant>
<symbol>;</symbol>
</statements>
<symbol>}</symbol>
<keyword>if</keyword>
<symbol>(</symbol>
<identifier>key</identifier>
<integerConstant>133</integerConstant>
<symbol>)</symbol>
<symbol>{</symbol>
<statements>
<keyword>let</keyword>
<identifier>direction</identifier>
<symbol>=</symbol>
<integerConstant>2</integerConstant>
<symbol>;</symbol>
</statements>
<symbol>}</symbol>
<keyword>if</keyword>
<symbol>(</symbol>
<identifier>key</identifier>
<integerConstant>130</integerConstant>
<symbol>)</symbol>
<symbol>{</symbol>
<statements>
<keyword>let</keyword>
<identifier>direction</identifier>
<symbol>=</symbol>
<integerConstant>3</integerConstant>
<symbol>;</symbol>
</statements>
<symbol>}</symbol>
<keyword>if</keyword>
<symbol>(</symbol>
<identifier>key</identifier>
<integerConstant>132</integerConstant>
<symbol>)</symbol>
<symbol>{</symbol>
<statements>
<keyword>let</keyword>
<identifier>direction</identifier>
<symbol>=</symbol>
<integerConstant>4</integerConstant>
<symbol>;</symbol>
</statements>
<symbol>}</symbol>
<whileStatement>
<keyword>while</keyword>
<symbol>(</symbol>
<symbol>~</symbol>
<symbol>(</symbol>
<identifier>key</identifier>
<integerConstant>0</integerConstant>
<symbol>)</symbol>
<symbol>)</symbol>
<symbol>{</symbol>
<statements>
<keyword>let</keyword>
<identifier>key</identifier>
<symbol>=</symbol>
<identifier>Keyboard</identifier>
<symbol>.</symbol>
<identifier>keyPressed</identifier>
<symbol>(</symbol>
<symbol>)</symbol>
<symbol>;</symbol>
<doStatement>
<keyword>do</keyword>
<identifier>moveSquare</identifier>
<symbol>(</symbol>
<symbol>)</symbol>
<symbol>;</symbol>
</doStatement>
</statements>
<symbol>}</symbol>
</whileStatement>
</statements>
<symbol>}</symbol>
</whileStatement>
<returnStatement>
<keyword>return</keyword>
<symbol>;</symbol>
</returnStatement>
</statements>
<symbol>}</symbol>
<symbol>}</symbol>
